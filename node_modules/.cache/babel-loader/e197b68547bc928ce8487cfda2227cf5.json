{"ast":null,"code":"var _jsxFileName = \"/Users/jjh/Desktop/opensource/openseafinder/src/components/detail/DetailBody/DetailBody.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./DetailBody.css\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Spinner, Badge, Card } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst item_list = [{\n  id: 0,\n  data: '바닥가격'\n}, {\n  id: 1,\n  data: '발행 NFT 수량'\n}, {\n  id: 2,\n  data: '소유자 수'\n}, {\n  id: 3,\n  data: '금일 평균 거래 가격'\n}, {\n  id: 4,\n  data: '전체 거래량'\n}];\nconst value_list = [{\n  id: 0,\n  value: 0\n}, {\n  id: 1,\n  value: 1\n}, {\n  id: 2,\n  value: 2\n}, {\n  id: 3,\n  value: 3\n}, {\n  id: 4,\n  value: 4\n}];\n\nfunction DetailBody() {\n  _s();\n\n  const [projectInputValue, setProjectInputValue] = useState(\"\");\n  const [projectInfo, setProjectInfo] = useState();\n  const [loading, setLoading] = useState(false);\n  const [checkedList, setCheckedList] = useState([]);\n\n  const onCheckedElement = (checked, item) => {\n    if (checked) {\n      setCheckedList([...checkedList, item]);\n    } else if (!checked) {\n      setCheckedList(checkedList.filter(el => el !== item));\n    }\n  };\n\n  const onCheckedAll = checked => {\n    if (checked) {\n      const checkedListArray = [];\n      item_list.forEach(list => checkedListArray.push(list));\n      setCheckedList(checkedListArray);\n    } else {\n      setCheckedList([]);\n    }\n  };\n\n  const fetchPriceInfo = () => {\n    setLoading(true);\n\n    if (projectInputValue) {\n      axios.get(`https://api.opensea.io/api/v1/collection/${projectInputValue}/stats`).then(res => {\n        setProjectInfo(res.data.stats);\n        value_list[0].value = projectInfo.floor_price;\n        value_list[1].value = projectInfo.count;\n        value_list[2].value = projectInfo.num_owners;\n        value_list[3].value = projectInfo.one_day_average_price.toFixed(1);\n        value_list[4].value = projectInfo.total_volume.toFixed(1);\n        setLoading(false);\n      });\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DetailBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explain\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"explainText\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD504\\uB85C\\uC81D\\uD2B8\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__group field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"input\",\n          className: \"form__field\",\n          placeholder: \"search\",\n          name: \"search\",\n          id: \"search\",\n          onChange: e => setProjectInputValue(e.currentTarget.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"search\",\n          className: \"form__label\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSearch,\n          size: \"2x\",\n          onClick: fetchPriceInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: [checkedList.length === 0 && '보고 싶은 데이터를 체크해주세요', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checklist\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"item_label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedList.length !== 0 || checkedList.length !== item_list.length ? false : true,\n            onChange: e => onCheckedAll(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), \" \\uC804\\uCCB4\\uC120\\uD0DD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), item_list.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"item_label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: item.data,\n            onChange: e => onCheckedElement(e.target.checked, item),\n            checked: checkedList.includes(item) ? true : false\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), \" \", item.data]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), !projectInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectInfoBoxWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectBoxItem\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            size: \"lg\",\n            className: \"badge\",\n            pill: true,\n            color: \"secondary\",\n            children: \"\\uBC14\\uB2E5\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"NFT \\uB4F1\\uAE09 \\uC911 \\uAC00\\uC7A5 \\uB0AE\\uC740 \\uC218\\uC900\\uC73C\\uB85C \\uC62C\\uB77C\\uC640 \\uC788\\uB294 \\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectBoxItem\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            size: \"lg\",\n            className: \"badge\",\n            pill: true,\n            color: \"secondary\",\n            children: \"\\uBC1C\\uD589 NFT \\uC218\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uBC1C\\uD589 \\uAC00\\uB2A5\\uD55C NFT\\uC758 \\uC218\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectBoxItem\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            size: \"lg\",\n            className: \"badge\",\n            pill: true,\n            color: \"secondary\",\n            children: \"\\uC18C\\uC720\\uC790 \\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD574\\uB2F9 NFT\\uC758 \\uC18C\\uC720\\uC790\\uC758 \\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectBoxItem\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            size: \"lg\",\n            className: \"badge\",\n            pill: true,\n            color: \"secondary\",\n            children: \"\\uAE08\\uC77C \\uD3C9\\uADE0 \\uAC70\\uB798 \\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC624\\uB298 \\uB0A0\\uC9DC\\uC758 \\uD574\\uB2F9 NFT\\uC758 \\uD3C9\\uADE0 \\uAC70\\uB798 \\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectBoxItem\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            size: \"lg\",\n            className: \"badge\",\n            pill: true,\n            color: \"secondary\",\n            children: \"\\uC804\\uCCB4 \\uAC70\\uB798\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD574\\uB2F9 NFT\\uC758 \\uC804\\uCCB4 \\uAC70\\uB798\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), projectInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectInfoBoxWrapper\",\n      children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectBox\",\n        children: item_list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: checkedList.includes(item) ? \"projectBoxItem\" : \"display_none\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            size: \"lg\",\n            className: \"badge\",\n            pill: true,\n            color: \"primary\",\n            children: item.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badgeValue\",\n            children: value_list[item.id].value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailBody, \"WV5lDURCgSRUVVeZOQYmnkYt1qE=\");\n\n_c = DetailBody;\nexport default DetailBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailBody\");","map":{"version":3,"sources":["/Users/jjh/Desktop/opensource/openseafinder/src/components/detail/DetailBody/DetailBody.jsx"],"names":["React","useState","axios","faSearch","FontAwesomeIcon","Spinner","Badge","Card","item_list","id","data","value_list","value","DetailBody","projectInputValue","setProjectInputValue","projectInfo","setProjectInfo","loading","setLoading","checkedList","setCheckedList","onCheckedElement","checked","item","filter","el","onCheckedAll","checkedListArray","forEach","list","push","fetchPriceInfo","get","then","res","stats","floor_price","count","num_owners","one_day_average_price","toFixed","total_volume","e","currentTarget","length","target","map","includes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./DetailBody.css\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Spinner, Badge, Card } from \"reactstrap\";\nconst item_list = [\n    {id:0, data: '바닥가격'},\n    {id:1, data: '발행 NFT 수량'},\n    {id:2, data: '소유자 수'},\n    {id:3, data: '금일 평균 거래 가격'},\n    {id:4, data: '전체 거래량'},\n];\nconst value_list = [\n    {id:0, value:0},\n    {id:1, value:1},\n    {id:2, value:2},\n    {id:3, value:3},\n    {id:4, value:4}\n];\n\n\nfunction DetailBody() {\n    const [projectInputValue, setProjectInputValue] = useState(\"\");\n    const [projectInfo, setProjectInfo] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checkedList, setCheckedList] =useState([]);\n    const onCheckedElement = (checked,item) =>{\n        if (checked){\n            setCheckedList([...checkedList,item]);\n        }else if(!checked){\n            setCheckedList(checkedList.filter(el => el !==item));\n        }\n    };\n    const onCheckedAll = (checked) => {\n        if(checked){\n            const checkedListArray = [];\n            item_list.forEach((list)=>checkedListArray.push(list));\n            setCheckedList(checkedListArray);\n        }\n        else{\n            setCheckedList([]);\n        }\n    };\n    \n\n    const fetchPriceInfo = () => {\n        setLoading(true);\n        if (projectInputValue) {\n            axios\n                .get(\n                    `https://api.opensea.io/api/v1/collection/${projectInputValue}/stats`\n                )\n                .then((res) => {\n                    setProjectInfo(res.data.stats);\n                    value_list[0].value = projectInfo.floor_price;\n                    value_list[1].value =projectInfo.count;\n                    value_list[2].value =projectInfo.num_owners;\n                    value_list[3].value =projectInfo.one_day_average_price.toFixed(1);\n                    value_list[4].value =projectInfo.total_volume.toFixed(1);\n                    setLoading(false);\n                });\n        } else {\n            return false;\n        }\n        \n    };\n    return (\n        <div className=\"DetailBody\">\n            <div className=\"search\">\n                <div className=\"explain\">\n                    <div className=\"explainText\">\n                        <span>프로젝트명을 입력하세요.</span>\n                    </div>\n                </div>\n                <div className=\"form__group field\">\n                    <input\n                        type=\"input\"\n                        className=\"form__field\"\n                        placeholder=\"search\"\n                        name=\"search\"\n                        id=\"search\"\n                        onChange={(e) =>\n                            setProjectInputValue(e.currentTarget.value)\n                        }\n                        required\n                    />\n                    <label for=\"search\" className=\"form__label\">\n                        Search\n                    </label>\n\n                    <FontAwesomeIcon\n                        icon={faSearch}\n                        size=\"2x\"\n                        onClick={fetchPriceInfo}\n                    />\n                </div>\n            </div>\n            <div className=\"message\">{checkedList.length === 0 && ('보고 싶은 데이터를 체크해주세요')}\n                <div className=\"checklist\">\n                    <label className=\"item_label\">\n                        <input\n                         type = \"checkbox\"\n                         checked={(checkedList.length !== 0 || checkedList.length !== item_list.length ) ? false : true } \n                        onChange={(e)=>onCheckedAll(e.target.checked)}>\n                        </input> 전체선택\n                    </label>\n                    {item_list.map((item) => (\n                        <label className=\"item_label\">\n                            <input\n                            key={item.id} type = \"checkbox\" value={item.data}\n                            onChange={(e)=> onCheckedElement(e.target.checked,item)}\n                            checked={checkedList.includes(item)?true:false}>\n                                </input> {item.data}\n                        </label>\n                    )\n                    )}\n                </div>\n            </div>\n\n            {!projectInfo && (\n            <div className=\"projectInfoBoxWrapper\">\n                <div className=\"projectBox\">\n                    <div className=\"projectBoxItem\">\n                        <Badge\n                            size=\"lg\"\n                            className=\"badge\"\n                            pill\n                            color=\"secondary\"\n                        >\n                            바닥가격\n                        </Badge>\n                        <span>\n                                NFT 등급 중 가장 낮은 수준으로 올라와 있는 가격\n                        </span>\n                    </div>\n                    <div className=\"projectBoxItem\">\n                        <Badge\n                            size=\"lg\"\n                            className=\"badge\"\n                            pill\n                            color=\"secondary\"\n                        >\n                            발행 NFT 수량\n                        </Badge>\n                        <span>\n                            발행 가능한 NFT의 수량\n                        </span>\n                    </div>\n                    <div className=\"projectBoxItem\">\n                        <Badge\n                            size=\"lg\"\n                            className=\"badge\"\n                            pill\n                            color=\"secondary\"\n                        >\n                            소유자 수\n                        </Badge>\n                        <span>\n                            해당 NFT의 소유자의 수\n                        </span>\n                    </div>\n                    <div className=\"projectBoxItem\">\n                        <Badge\n                            size=\"lg\"\n                            className=\"badge\"\n                            pill\n                            color=\"secondary\"\n                        >\n                            금일 평균 거래 가격\n                        </Badge>\n                        <span>\n                            오늘 날짜의 해당 NFT의 평균 거래 가격\n                        </span>\n                    </div>\n                    <div className=\"projectBoxItem\">\n                        <Badge\n                            size=\"lg\"\n                            className=\"badge\"\n                            pill\n                            color=\"secondary\"\n                        >\n                            전체 거래량\n                        </Badge>\n                        <span>\n                            해당 NFT의 전체 거래량\n                        </span>\n                    </div>\n                </div>\n            </div>\n            )}\n            {projectInfo&&(\n            <div className=\"projectInfoBoxWrapper\">\n                {loading && <Spinner />}\n                    <div className=\"projectBox\">\n                    {item_list.map((item) => (\n                        <div className={ checkedList.includes(item) ? \"projectBoxItem\" : \"display_none\"}>\n                            <Badge\n                                size=\"lg\"\n                                className=\"badge\"\n                                pill\n                                color=\"primary\"\n                            >\n                                {item.data}\n                            </Badge>\n                            <span className=\"badgeValue\">\n                                {value_list[item.id].value}\n                            </span>\n                        </div>\n                        ))}\n                        </div>\n                    </div>\n                    )}\n            </div>\n    );\n}\n\nexport default DetailBody;"]},"metadata":{},"sourceType":"module"}